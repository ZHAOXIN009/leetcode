Runtime: 56 ms, faster than 66.00% of C++ online submissions for Insert Delete GetRandom O(1).
Memory Usage: 21.3 MB, less than 100.00% of C++ online submissions for Insert Delete GetRandom O(1).
```
class RandomizedSet {
public:
    unordered_map<int,int>hash;
        vector<int>nums;
    /** Initialize your data structure here. */
    RandomizedSet() {
        
    }
    
    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */
    bool insert(int val) {
        
        if(hash.find(val)!=hash.end()){
            return false;
        }
        else{
            nums.push_back(val);
            hash[val]=nums.size()-1;
            return true;
        }
    }
    
    /** Removes a value from the set. Returns true if the set contained the specified element. */
    bool remove(int val) {
        if(hash.find(val)==hash.end()){
            return false;
        }
        else{
            int temp=nums[nums.size()-1];
            hash[temp]=hash[val];
            nums[hash[val]]=temp;
            nums.pop_back();
            hash.erase(val);
            return true;
        }
    }
    
    /** Get a random element from the set. */
    int getRandom() {
        return nums[rand()%nums.size()];
    }
};

```
