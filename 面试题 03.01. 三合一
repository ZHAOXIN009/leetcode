```
class TripleInOne {
public:
   
    int stsize=0;
    int curr[3]={0};
    vector<int>store;
    TripleInOne(int stackSize) {
       stsize=stackSize;
       store.resize(3*stackSize);
    }
    
    void push(int stackNum, int value) {
        
        if(curr[stackNum]>=stsize){
            return;
        }
        store[curr[stackNum]+stsize*stackNum]=value;
        curr[stackNum]++;


    }
    
    int pop(int stackNum) {
        if(curr[stackNum]==0)return -1;
        int res=store[curr[stackNum]-1+stsize*stackNum];
        curr[stackNum]--;
        return res;
    }
    
    int peek(int stackNum) {
        if(curr[stackNum]==0){
            return -1;
        }
        return store[curr[stackNum]-1+stsize*stackNum];
    }
    
    bool isEmpty(int stackNum) {
        return curr[stackNum]==0;
    }
};

/**
 * Your TripleInOne object will be instantiated and called as such:
 * TripleInOne* obj = new TripleInOne(stackSize);
 * obj->push(stackNum,value);
 * int param_2 = obj->pop(stackNum);
 * int param_3 = obj->peek(stackNum);
 * bool param_4 = obj->isEmpty(stackNum);
 */
 ```
