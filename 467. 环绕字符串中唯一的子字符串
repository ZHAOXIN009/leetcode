```
class Solution {
public:
    
    int findSubstringInWraproundString(string p) {
        vector<int>dp(26, 0);
        int sum=0;
        for(int i=0; i<p.size(); ++i){
            if(i>0 && (p[i]==p[i-1]+1||(p[i]=='a'&&p[i-1]=='z')) ){
                sum++;
            }
            else{
                sum=1;
            }
            dp[p[i]-'a']=max(dp[p[i]-'a'], sum);
        }
        return accumulate(dp.begin(), dp.end(), 0);
    }
};
```
