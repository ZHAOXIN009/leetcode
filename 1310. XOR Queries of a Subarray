
```
brute force:
class Solution {
public:
    vector<int> xorQueries(vector<int>& arr, vector<vector<int>>& queries) {
        vector<int>res;
        for(vector<int>temp: queries){
            int curr=arr[temp[0]];
            int left=temp[0];
            int right=temp[1];
            while(left<right){
                curr=curr^arr[right];
                right--;
            }
            res.push_back(curr);
        }
        return res;
    }
};
```
Runtime: 1688 ms, faster than 6.32% of C++ online submissions for XOR Queries of a Subarray.
Memory Usage: 28.8 MB, less than 100.00% of C++ online submissions for XOR Queries of a Subarray.

大神
```
class Solution {
public:
    vector<int> xorQueries(vector<int>& arr, vector<vector<int>>& queries) {
        vector<int>res;
        for(int i=1; i<arr.size(); ++i){
            arr[i]^=arr[i-1];
        }
        for(vector<int>temp :queries){
            if(temp[0]==0){
                res.push_back(arr[temp[1]]);
            }
            else{
                res.push_back(arr[temp[0]-1]^arr[temp[1]]);
            }
        }
        return res;
    }
};
```
Runtime: 136 ms, faster than 56.65% of C++ online submissions for XOR Queries of a Subarray.
Memory Usage: 28.7 MB, less than 100.00% of C++ online submissions for XOR Queries of a Subarray.
