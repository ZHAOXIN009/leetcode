Runtime: 164 ms, faster than 20.85% of C++ online submissions for LRU Cache.
Memory Usage: 37.5 MB, less than 93.90% of C++ online submissions for LRU Cache.
```
class LRUCache {
    private: 
    typedef list<int>I;
    typedef pair<int,I::iterator>II;
    typedef unordered_map<int, II>III;
    III cache;
    I used;
    int cache_cap;
    
    void touch(III::iterator it){
        int key=it->first;
        used.erase(it->second.second);
        used.push_front(key);
        it->second.second=used.begin();
    }
    
    
public:
    LRUCache(int capacity) {
        cache_cap=capacity;
    }
    
    int get(int key) {
        auto it=cache.find(key);
        if(it==cache.end()){
            return -1;
        }
        touch (it);
        return it->second.first;
    }
    
    void put(int key, int value) {
        auto it=cache.find(key);
        if(it!=cache.end()){
            it->second.first=value;
            touch(it);
        }
        else{
            if(used.size()==cache_cap){
                cache.erase(used.back());
                used.pop_back();
            }
            used.push_front(key);
            cache[key]={value,used.begin()};
        }
    }
};

```
