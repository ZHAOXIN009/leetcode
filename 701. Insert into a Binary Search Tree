```
class Solution {
public:
    TreeNode* insertIntoBST(TreeNode* root, int val) {
        if(root==nullptr){
            TreeNode*newroot=new TreeNode(val);
            return newroot;
        }
        TreeNode*curr=root;
        TreeNode*node=new TreeNode(val);
        while(curr){
            if(curr->val>val){
                if(curr->left==nullptr){
                    curr->left=node;
                    return root;
                }
                curr=curr->left;
            }
            else{
                if(curr->right==nullptr){
                    curr->right=node;
                    return root;
                }
                curr=curr->right;
            }
        }
        return root;
    }
};
```
